use aliases

# Aliases
alias vacuumVent d0 # the left vent
alias fillVent d1 # the right vent
alias OscillationSwitch d3
alias PowerDisplay d4

# Prefab Hashes
const DOOR_HASH = 337416191
const LEVER_HASH = 1220484876
const GAS_SENSOR_HASH = -1252983604
const TURBINE_HASH = 1282191063
const ACTIVE_VENT_HASH = -1129453144

# Modes
const VENT_MODE_OUTWARD = 0
const VENT_MODE_INWARD = 1
const DISPLAY_MODE_POWER = 2

# Constants
const NEARLY_VACUUM = 0.1
const MAX_PIPE_PRESSURE = 55000
const MAX_ROOM_PRESSURE = 1000
const HIGH_TARGET_PRESSURE = 100
const LOW_TARGET_PRESSURE = 5

# Is true every other tick
var toggle

# are the doors closed?
var doorsClosed

PowerDisplay.On = 1
PowerDisplay.Mode = DISPLAY_MODE_POWER

vacuumVent.Mode = VENT_MODE_INWARD
vacuumVent.PressureExternal = 0
vacuumVent.PressureInternal = MAX_PIPE_PRESSURE

start:
# Handle the toggling
toggle = seqz(toggle)

# measure pressures
r15 = d(GAS_SENSOR_HASH).Pressure(Maximum)
# high pressure side needs filling
var roomNeedsPressure = slt(r15,HIGH_TARGET_PRESSURE)
var pressureNearlyVacuum = sle(r15,NEARLY_VACUUM)

r15 = d(GAS_SENSOR_HASH).Pressure(Minimum)
# low pressure side needs vacuuming
var roomNeedsVacuum = sgt(r15,LOW_TARGET_PRESSURE)

# Handle door open/close
# if doorsShouldOpen && pressureNearlyVacuum
# then we can open the door
var doorsShouldOpen = d(LEVER_HASH).Setting(Maximum)
# doorsOpen = r15 = doorsShouldOpen && pressureNearlyVacuum
and r15 doorsShouldOpen pressureNearlyVacuum
sb DOOR_HASH Open r15
# lock if closed
doorsClosed = seqz(r15)
d(DOOR_HASH).Lock = doorsClosed

# Handle vent settings
var oscillation = OscillationSwitch.Setting

# branch to filling if doorsShouldOpen==0
beqz doorsShouldOpen filling
# if we are venting
fillVent.Mode = VENT_MODE_INWARD
fillVent.PressureExternal = 0
fillVent.PressureInternal = MAX_PIPE_PRESSURE
vacuumVent.On = doorsClosed
fillVent.On = doorsClosed
j end_if
filling:
# if we are filling
fillVent.Mode = VENT_MODE_OUTWARD
fillVent.PressureExternal = MAX_ROOM_PRESSURE
fillVent.PressureInternal = 0
# fillVent.On = toggle && oscillation && roomNeedsPressure
# vacuumVent.On =  toggle && oscillation && roomNeedsVacuum
and r15 toggle oscillation
and r14 r15 roomNeedsPressure
fillVent.On = r14
and r14 r15 roomNeedsVacuum
vacuumVent.On = r14
end_if:


# Write power production to display
r15 = d(TURBINE_HASH).PowerGeneration(Sum)
PowerDisplay.Setting = r15

yield
j start
